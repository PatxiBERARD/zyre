# Define job order
stages:
  - lib-build


# Create library for macos
lib-build-macos:
  stage: lib-build
  tags:
    - osx
  script:
    - git clean -xfd
    - mkdir build
    - mkdir release
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_DRAFTS=ON -DCMAKE_PREFIX_PATH=$HOME/builds/sysroot/usr/local/
    - make -j8 -C build
    - make -C build DESTDIR=$PWD/release install
    - make -C build DESTDIR=$HOME/builds/sysroot/ install
    - cd release/usr/local/
    - tar zcvf ../../../zyre.tgz *
    - cd ../../..
  artifacts:
    paths:
      - zyre.tgz
    name: "lib-build-macos"
    expire_in: 1 day
  dependencies: []
  only:
    refs:
      - master
  
# Create library for windows
# Library will be built for 4 targets : Debug x86, Debug x64, Release x86, Release x64
lib-build-windows:
  stage: lib-build
  tags:
    - windows
  script:
    - IF (!$env:VS_VERSION_YEAR) { ECHO ">> VS_VERSION_YEAR must be defined on the Runner side <<" ; EXIT 1 }
    - IF (!$env:VS_VERSION_NUM) { ECHO ">> VS_VERSION_NUM must be defined on the Runner side <<" ; EXIT 1 }
    - $env:INITIAL_PATH = "$env:PATH"
    - mkdir build
    - cd build
    - $env:PATH="$env:INITIAL_PATH;$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x86"
    - cmake -S .. -B DebugX86 -G"Visual Studio $env:VS_VERSION_NUM $env:VS_VERSION_YEAR" -DENABLE_DRAFTS=ON -DZYRE_BUILD_STATIC=OFF
    - cmake --build DebugX86 --target ALL_BUILD --config Debug
    - cmake --install DebugX86 --config Debug --prefix $env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x86
    - $env:PATH="$env:INITIAL_PATH;$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x86"
    - cmake -S .. -B ReleaseX86 -G"Visual Studio $env:VS_VERSION_NUM $env:VS_VERSION_YEAR" -DENABLE_DRAFTS=ON -DZYRE_BUILD_STATIC=OFF
    - cmake --build ReleaseX86 --target ALL_BUILD --config Release
    - cmake --install ReleaseX86 --config Release --prefix $env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x86
    - $env:PATH="$env:INITIAL_PATH;$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x64"
    - cmake -S .. -B DebugX64 -G"Visual Studio $env:VS_VERSION_NUM $env:VS_VERSION_YEAR Win64" -DENABLE_DRAFTS=ON -DZYRE_BUILD_STATIC=OFF
    - cmake --build DebugX64 --target ALL_BUILD --config Debug
    - cmake --install DebugX64 --config Debug --prefix $env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Debug\x64
    - $env:PATH="$env:INITIAL_PATH;$env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x64"
    - cmake -S .. -B ReleaseX64 -G"Visual Studio $env:VS_VERSION_NUM $env:VS_VERSION_YEAR Win64" -DENABLE_DRAFTS=ON -DZYRE_BUILD_STATIC=OFF
    - cmake --build ReleaseX64 --target ALL_BUILD --config Release
    - cmake --install ReleaseX64 --config Release --prefix $env:DEPLOYMENT_WINDOWS_NET_SHARE\Builds\Release\x64
  only:
    refs:
      - master

# Create library for linux
lib-build-linux:
  stage: lib-build
  image: ingescape/debian-testing-compil
  tags:
    - docker
  script:
    - mkdir build
    - mkdir release
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DENABLE_DRAFTS=ON -DCMAKE_PREFIX_PATH=$HOME/builds/release/linux_x64/usr/local/
    - make -C build
    - make -C build DESTDIR=$PWD/release install
    - make -C build DESTDIR=$HOME/builds/release/linux_x64/ install
    - cd release/usr/local/
    - tar zcvf ../../../zyre.tgz *
    - cd ../../..
  artifacts:
    paths:
      - zyre.tgz
    name: "lib-build-linux-x64"
    expire_in: 1 day
  dependencies: []
  only:
    refs:
      - master
  
